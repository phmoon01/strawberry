---
title: "Stawberries 2"
author: MA615
date: 2024 Sept 30
format: html
editor: visual
---

# Preparing data for analysis

Acquire, explore, clean & structure, EDA

### Data cleaning and organization

["An introduction to data cleaning with R" by Edwin de Jonge and Mark van der Loo](https://cran.r-project.org/doc/contrib/de_Jonge+van_der_Loo-Introduction_to_data_cleaning_with_R.pdf)

["Problems, Methods, and Challenges in Comprehensive Data Cleansing" by Heiko MÃ¼ller and Johann-Christoph Freytag](https://www.researchgate.net/profile/Heiko-Mueller/publication/228929938_Problems_methods_and_challenges_in_comprehensive_data_cleansing/links/09e415101b58541e2c000000/Problems-methods-and-challenges-in-comprehensive-data-cleansing.pdf)

## Strawberries

**Questions**

-   Where they are grown? By whom?

-   Are they really loaded with carcinogenic poisons?

-   Are they really good for your health? Bad for your health?

-   Are organic strawberries carriers of deadly diseases?

-   When I go to the market should I buy conventional or organic strawberries?

-   Do Strawberry farmers make money?

-   How do the strawberries I buy get to my market?

## The data

The data set for this assignment has been selected from:

[[USDA_NASS_strawb_2024SEP25](https://quickstats.nass.usda.gov) The data have been stored on NASS here: [USDA_NASS_strawb_2024SEP25](https://quickstats.nass.usda.gov/results/28141CE5-7429-36C3-A385-33ACC8030763)

and has been stored on the blackboard as strawberries25_v3.csv.

## read and explore the data

Set-up

```{r}
#| label: load libraries and set options
#| warning: false
#| message: false
#| 

library(knitr)  
library(kableExtra)
library(tidyverse)


```

Read the data and take a first look

```{r}
#| label: read data - glimpse 

strawberry <- read_csv("strawberries25_v3.csv", col_names = TRUE)

glimpse(strawberry)
```

I have 12699 rows and 21 columns.

All I can see from the glimpse is I have date, location, values and coefficients of variation.

Examine the data. How is it organized?

```{r}
#| label: explore organization 1 


## Is every line associated with a state?

state_all <- strawberry |> distinct(State)

state_all1 <- strawberry |> group_by(State) |> count()

## every row is associated with a state

if(sum(state_all1$n) == dim(strawberry)[1]){print("Yes every row in the data is associated with a state.")}

## rm(state_all, state_all1)

```

## remove columns with a single value in all rows

```{r}
#|label: function def - drop 1-item columns

drop_one_value_col <- function(df){   ## takes whole dataframe
drop <- NULL  

## test each column for a single value
for(i in 1:dim(df)[2]){     
if((df |> distinct(df[,i]) |> count()) == 1){
drop = c(drop, i)
} }

## report the result -- names of columns dropped
## consider using the column content for labels 
## or headers 

if(is.null(drop)){return("none")}else{

   print("Columns dropped:")
   print(colnames(df)[drop])
   strawberry <- df[, -1*drop]
   }
}


## use the function

strawberry <- drop_one_value_col(strawberry)

drop_one_value_col(strawberry)

```

To get better look at the data, look at California.

```{r}
#| label: explore California only

calif <- strawberry |>  filter(State=="CALIFORNIA")

## look at the unique values in the "Program" column

## in the consol
## unique(calif$Program)

## and look at the data selection widget on 
##      https://quickstats.nass.usda.gov

## You can see that CENSUS AND SURVEY are the two sources
## of data. (Why? What's the differences?).  So, let's see
## they differ.

calif_census <- calif |> filter(Program=="CENSUS")

calif_survey  <- calif |>  filter(Program=="SURVEY")

### 


##calif_survey <- strawberry |> select(Year, Period, `Data Item`, Value)


```

Explore California to understand the census and survey

```{r}
#| label: explore Calif census and survey 

## no assignment -- just exploring

drop_one_value_col(calif_census)

drop_one_value_col(calif_survey)



```

Conclusions from California data exploration.

## Now return to the entire data set.

take the lessons learned by examinging the California data

Two strategies -- columns first, rows first

Split the census data from the survey data. drop single value columns

## separate composite columns

### `Data Item` into (fruit, category, item)

```{r}
#|label: split Data Item

  strawberry <- strawberry |>
  separate_wider_delim(  cols = `Data Item`,
                         delim = ",",
                         names = c("Fruit",
                                 "Category",
                                 "Item",
                                 "Metric"),
                         too_many = "error",
                         too_few = "align_start"
                       )

## Use too_many and too_few to set up the separation operation.

```

There is a problem you have to fix -- a leading space.

```{r}
#|label: fix the leading space

 # note
strawberry$Category[1]
# strawberry$Item[2]
# strawberry$Metric[6]
# strawberry$Domain[1]
## 
## trim white space 

strawberry$Category <- str_trim(strawberry$Category, side = "both")
strawberry$Item <- str_trim(strawberry$Item, side = "both")
strawberry$Metric <- str_trim(strawberry$Metric, side = "both")

```

## now exam the Fruit column -- find hidden sub-columns

```{r}

unique(strawberry$Fruit)

## generate a list of rows with the production and price information

spr <- which((strawberry$Fruit=="STRAWBERRIES - PRODUCTION") | (strawberry$Fruit=="STRAWBERRIES - PRICE RECEIVED"))


strw_prod_price <- strawberry |> slice(spr)


## this has the census data, too

strw_chem <- strawberry |> slice(-1*spr)  ## too soon


  
```

## now examine the rest of the columns

Which ones need to be split?

## split sales and chemicals into two dataframes

(do this last after separating rows into separate data frames) (THEN rename the columns to correspond the analysis being done with the data frames)

```{r}
#|label: split srawberry into census and survey pieces

strw_b_sales <- strawberry |> filter(Program == "CENSUS")

strw_b_chem <- strawberry |> filter(Program == "SURVEY")

nrow(strawberry) == (nrow(strw_b_chem) + nrow(strw_b_sales))

## Move marketing-related rows in strw_b_chem 
## to strw_b_sales


```

## plots

```{r}
#|label: plot 1

plot1_data <- strawberry |> 
  select(c(Year, State, Category, Value)) |> 
  filter((Year == 2021) & (Category == "ORGANIC - OPERATIONS WITH SALES"))

plot1_data$Value <- as.numeric(plot1_data$Value)

plot1_data <- plot1_data |> arrange(desc(Value))

ggplot(plot1_data, aes(x=reorder(State, -Value), y=Value)) + 
  geom_bar(stat = "identity") + 
  theme(axis.text.x=element_text(angle=45,hjust=1)) +
  labs(x = "States", y = "Count",
title ="Number of Organic Strawberry operations with Sales in 2021")


```

```{r}
## plot 2

plot2_data <- strawberry |> 
  select(c(Year, State, Category, Item, Value)) |> 
  filter((Year == 2021) & 
           (Category == "ORGANIC - SALES") & 
           (Item == "MEASURED IN $") & 
           (Value != "(D)"))


plot2_data$Value <- as.numeric(gsub(",", "", plot2_data$Value))

plot2_data <- plot1_data |> arrange(desc(Value))

ggplot(plot2_data, aes(x=reorder(State, -Value), y=Value)) + 
  geom_bar(stat = "identity") + 
  theme(axis.text.x=element_text(angle=45,hjust=1)) +
  labs(x = "States", y = "Sales",
title ="Organic Strawberry Sales ($) in 2021")


```
